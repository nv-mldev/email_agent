```mermaid
flowchart TD
    subgraph "User & External Systems"
        User(fa:fa-user User)
        Mailbox(fa:fa-envelope Microsoft 365 Mailbox)
        AzureBlob[(fa:fa-cloud Azure Blob Storage)]
        DocIntel(fa:fa-robot Azure Document Intelligence)
    end

    subgraph "Application Infrastructure"
        DB[(PostgreSQL Database\nemail_processing_log)]
        MQ((RabbitMQ\nMessage Broker))
    end

    subgraph "Real-time Front-End"
        style FE fill:#ddeeff,stroke:#333,stroke-width:2px
        FE[fa:fa-window-maximize Front-End UI]
    end

    subgraph "Backend API Server (FastAPI)"
        style API fill:#ddffdd,stroke:#333,stroke-width:2px
        API[api/main.py\nREST & WebSocket API]
    end

    subgraph "Background Services (Workers)"
        style Poll fill:#fff2cc,stroke:#333,stroke-width:2px
        style Parse fill:#fff2cc,stroke:#333,stroke-width:2px
        style Analyze fill:#fff2cc,stroke:#333,stroke-width:2px
        Poll["email_polling_service\n(poll_emails.py)"]
        Parse["email_parser_service\n(async_service.py)"]
        Analyze["document_analysis_service\n(service.py)"]
    end
    
    %% --- Flow Definition ---

    %% 1. Email Polling & Notification
    Poll -- "1. Checks for unread mail via MS Graph API" --> Mailbox
    Poll --o|2. Creates Log entry\n(status: RECEIVED)| DB
    Poll -.->|3a. Publishes 'Processing Job'| MQ
    Poll -.->|3b. Publishes 'UI Notification'| MQ

    %% 2. Real-time UI Update
    API -.-> |Listens for UI Notifications| MQ
    FE <-.-> |4. Persistent WebSocket Connection| API
    API -- "5. Pushes 'New Email' Alert" --> FE
    User -- "Sees real-time alert" --> FE

    %% 3. Email Parsing
    Parse -.-> |6. Consumes 'Processing Job'| MQ
    Parse -- "7. Fetches email body & attachments" --> Mailbox
    Parse -- "8. Uploads attachments" --> AzureBlob
    Parse --o|9. Updates Log entry\n(body, URLs, status: PROCESSED)| DB
    Parse -.-> |10. Publishes 'Analysis Job'| MQ

    %% 4. Document Analysis
    Analyze -.-> |11. Consumes 'Analysis Job'| MQ
    Analyze -- "12. Retrieves attachment" --> AzureBlob
    Analyze -- "13. Classifies document" --> DocIntel
    Analyze --o|14. Updates Log entry with results\n(status: PENDING_CONFIRMATION)| DB
    
    %% 5. User Confirmation via REST API
    User -- "15. Clicks to view details" --> FE
    FE -- "16. GET /api/emails/{id}" --> API
    API --o|17. Fetches full details from| DB
    API -- "Returns JSON data" --> FE
    User -- "18. Reviews & confirms document type" --> FE
    FE -- "19. POST /api/emails/{id}/confirm" --> API
    API --o|20. Updates Log entry\n(status: CONFIRMED)| DB

    %% 6. Final Extraction (Future Step)
    subgraph "Downstream Extraction APIs (Future)"
        style Extraction fill:#ffdddd,stroke:#333,stroke-width:2px
        Extraction["Invoice/PO/etc.\nExtraction APIs"]
    end
    API -- "21. Triggers specific extraction" --> Extraction
```

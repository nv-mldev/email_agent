%%{init: {"themeVariables": {"primaryTextColor": "#000000", "secondaryTextColor": "#000000", "textColor": "#000000"}}}%%
flowchart TD
    subgraph User & External Systems
        User(fa:fa-user User)
        Mailbox(fa:fa-envelope Microsoft 365 Mailbox)
        AzureBlob[(fa:fa-cloud Azure Blob Storage)]
        DocIntel(fa:fa-robot Azure Document Intelligence)
    end

    subgraph Application Infrastructure
        DB[(PostgreSQL Database\nemail_processing_log)]
        MQ((RabbitMQ\nMessage Broker))
    end

    subgraph Real-time Front-End
        style FE fill:#ddeeff,stroke:#333,stroke-width:2px,color:#000000
        FE[fa:fa-window-maximize Front-End UI]
    end

    subgraph Backend API Server FastAPI
        style API fill:#ddffdd,stroke:#333,stroke-width:2px,color:#000000
        API[api/main.py\nREST & WebSocket API]
    end

    subgraph BackgroundServices_Workers
        style Poll fill:#fff2cc,stroke:#333,stroke-width:2px,color:#000000
        style Parse fill:#fff2cc,stroke:#333,stroke-width:2px,color:#000000
        style Analyze fill:#fff2cc,stroke:#333,stroke-width:2px,color:#000000
        Poll[email_polling_service]
        Parse[email_parser_service]
        Analyze[document_analysis_service]
    end
    
    %% --- Flow Definition ---

    %% Email Polling & Notification
    Poll -- "Checks for unread mail via MS Graph API" --> Mailbox
    Poll -- "Creates Log entry" --> DB
    Poll -. "Publishes 'Processing Job'" .-> MQ
    Poll -. "Publishes 'UI Notification'" .-> MQ

    %% 2. Real-time UI Update
    API -. "Listens for UI Notifications" .-> MQ
    FE <--> API[Persistent WebSocket Connection]
    API -- "Pushes 'New Email' Alert" --> FE
    User -- "Sees real-time alert" --> FE

    %% %% 3. Email Parsing
    Parse -.-> MQ[Publishes 'Analysis Job']
    Parse -- Fetches email body & attachments --> Mailbox
    Parse -- Uploads attachments --> AzureBlob
    Parse -- "Updates Log entry (body, URLs, status: PROCESSED)" --> DB
    Parse -. "Publishes 'Analysis Job'" .-> MQ

    %% %% 4. Document Analysis
    Analyze -.->|Consumes 'Analysis Job'| MQ
    Analyze -- Retrieves attachment --> AzureBlob
    Analyze -- Classifies document --> DocIntel
    Analyze -- Updates Log entry with results --> DB
    
    %% %% 5. User Confirmation via REST API
    User -- Clicks to view details --> FE
    FE -- GET /api/emails/{id} --> API
    API -- Fetches full details from --> DB
    API -- Returns JSON data --> FE
    User -- Reviews & confirms document type --> FE
    FE -- POST /api/emails/{id}/confirm --> API
    API -- Updates Log entry (status: CONFIRMED) --> DB

    %% %% 6. Final Extraction (Future Step)
    subgraph Downstream Extraction APIs
        style Extraction fill:#ffdddd,stroke:#333,stroke-width:2px,color:#000000
        Extraction["Invoice/PO/etc.\nExtraction APIs"]
    end
    API -- 21. Triggers specific extraction --> Extraction

